name: jupyter-experiment
services:
  jupyter:
    image: quay.io/jupyter/pytorch-notebook:pytorch-2.5.1
    container_name: jupyter
    ports:
      - "8888:8888"
    shm_size: 8g
    environment:
      - MLFLOW_TRACKING_URI=http://${HOST_IP}:8000/
      - ENTP_DATA_DIR=/mnt/ENTP
    volumes:
      - ~/data-persist-chi/workspace:/home/jovyan/work/  # change "~/data-persist-chi/workspace" to the jupyter you want
      - type: bind
        source: /mnt/object
        target: /mnt/ENTP
        read_only: true
      - type: bind
        source: /mnt/object
        target: /mnt/ENTP
        read_only: true
    command: >
      bash -c "python3 -m pip install mlflow && start-notebook.sh"
    networks:
      - production_net

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.20.2
    container_name: mlflow
    restart: always
    depends_on:
      - minio
      - postgres
      - minio-create-bucket
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:8000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: "your-access-key"
      AWS_SECRET_ACCESS_KEY: "your-secret-key"
    ports:
      - "8000:8000"
    command: >
      /bin/sh -c "pip install psycopg2-binary boto3 &&
      mlflow server --backend-store-uri postgresql://postgres:1234@postgres/mlflowdb 
      --artifacts-destination s3://mlflow-artifacts/ --serve-artifacts --host 0.0.0.0 --port 8000"
    networks:
      - production_net

  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 your-access-key your-secret-key &&
      if ! mc ls minio/mlflow-artifacts; then
        mc mb minio/mlflow-artifacts &&
        echo 'Bucket mlflow-artifacts created'
      else
        echo 'Bucket mlflow-artifacts already exists';
      fi"
    networks:
      - production_net


